package ArmyParser

// Standard libs imports:
import ClosureForGroups
import HashMap
import LinkedList
import UnitIds

// Local imports:
import LocalObjectIDs

let armyMap = new HashMap<int, LinkedList<int>>
    ..put(UnitIds.footman, generateUnitList(UNIT_FOOTMAN, 1))
    ..put(UnitIds.rifleman, generateUnitList(UNIT_RIFLEMAN, 1))
    ..put(UnitIds.knight, generateUnitList(UNIT_KNIGHT, 1))
    ..put(UnitIds.priest, generateUnitList(UNIT_PRIEST, 0))
    ..put(UnitIds.peasant, generateUnitList(UNIT_FOOTMAN, 1))

function generateUnitList(int unitId, int count) returns LinkedList<int>
    let unitList = new LinkedList<int>
    for i = 0 to count - 1
        unitList.add(unitId)
    return unitList

public function getArmyFromRect(rect armyRect) returns LinkedList<LinkedList<int>>
    let unitList = new LinkedList<LinkedList<int>>
    forUnitsInRect(armyRect) (unit u) ->
        if armyMap.get(u.getTypeId()) != null
            unitList.addtoStart(armyMap.get(u.getTypeId()))
    return unitList
