package UndeadAbilitiesDef

import BTAbilities
import AbilityTooltipGenerator
import AbilityObjEditingCommons
import Assets
import ItemObjEditingCommon
import UnitObjEditingCommon

import LocalObjectIDs
import TooltipsUtils


@compiletime function createUndeadAbilities()
    var itm = createBasicItem(ITEM_UNHOLY_FRENZY)
        ..setItemCost(0, 100, 1, 3, 3)
        ..setNameEnhance("Z", "Add 1 Unholy Frenzy")
        ..setInterfaceIcon(Icons.bTNUnholyFrenzy)

    var tgen = new BTAbilityTooltipGenerator("Increases the attack rate of a " +
        "target unit but drains hit points.")
    new AbilityDefinitionUnholyFrenzycreep(ABIL_UNHOLY_FRENZY)
        ..setCheckDependencies(false)
        ..presetCooldown(_ -> 0)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetAttackSpeedBonus(_ -> 0.60)
        ..presetCastRange(_ -> 500)
        ..presetDamageperSecond(_ -> 4)
        ..presetManaCost(_ -> 40)
        ..presetDurationNormal(_ -> 45)
        ..setNameEnhance("Z", "Unholy Frenzy")
        ..tooltipStopListen(false)

    createAutoCastedAlliedAbility(ABIL_AUTOCAST_UNHOLY_FRENZY)
        ..presetManaCost(_ -> 40)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetCooldown(_ -> 3)
        ..presetCastRange(_ -> 500)
        ..presetDurationNormal(_ -> 45)
        ..tooltipStopListen(true)
        ..setIconNormal(Icons.bTNUnholyFrenzy)
        ..setIconTurnOff(Icons.bTNUnholyFrenzy)
        ..setBuffs(1, BuffIds.unholyFrenzy.toRawCode())

    tgen.applyToDefItem(itm)
    abilTooltipMap.put(ABIL_UNHOLY_FRENZY, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator("Creates a barrier that block spell " +
        "and magic damage from affecting a target unit.")
    new AbilityDefinitionAntimagicShieldcreep(ABIL_ANTI_MAGIC_SHELL)
        ..presetCooldown(_ -> 0)
        ..setCheckDependencies(false)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetShieldLife(_ -> 300)
        ..presetCastRange(_ -> 500)
        ..presetManaCost(_ -> 40)
        ..presetDurationNormal(_ -> 90)
        ..setNameEnhance("X", "Anti-Magic Shell")
        ..setBuffs(1, BuffIds.antiMagicShellExtra.toRawCode())
        ..tooltipStopListen(false)

    createAutoCastedAlliedAbility(ABIL_AUTOCAST_ANTI_MAGIC_SHELL)
        ..presetManaCost(_ -> 40)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetCooldown(_ -> 2)
        ..presetDurationNormal(_ -> 90)
        ..tooltipStopListen(true)
        ..presetCastRange(_ -> 500)
        ..setNameEnhance("X", "Anti-Magic Shell")
        ..setBuffs(1, BuffIds.antiMagicShellExtra.toRawCode())
        ..setIconNormal(Icons.bTNAntiMagicShell)
        ..setIconTurnOff(Icons.bTNAntiMagicShell)

    abilTooltipMap.put(ABIL_ANTI_MAGIC_SHELL, tgen.generateFullTooltip())

    itm = createBasicItem(ITEM_FROST_ARMOR)
        ..setItemCost(0, 50, 1, 3, 3)
        ..setNameEnhance("X", "Add 1 Frost Armor")
        ..setInterfaceIcon(Icons.bTNFrostArmor)

    tgen = new BTAbilityTooltipGenerator(
        "Creates a shield of frost around a target friendly unit." +
        " The shield adds armor and slows melee units that attack it"
    )
    new AbilityDefinitionLichFrostArmorAutocast(ABIL_FROST_ARMOR)
        ..setLevels(1)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetArmorBonus(_ -> 4)
        ..presetCooldown(_ -> 4)
        ..presetManaCost(_ -> 50)
        ..presetDurationNormal(_ -> 30)
        ..setNameEnhance("X", "Frost Armor")
        ..tooltipStopListen(true)

    tgen.applyToDefItem(itm)
    abilTooltipMap.put(ABIL_FROST_ARMOR, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator("Raises skeletons from a corpse.")
    new AbilityDefinitionRaiseDeadCreep(ABIL_RAISE_SKELETON)
        ..registerTooltipGenerator(tgen)
        ..presetUnitTypeOne(_ -> commaList(UNIT_SKELETON))
        ..presetUnitTypeForLimitCheck(_ -> commaList(UNIT_SKELETON))
        ..tooltipStartListen()
        ..presetUnitsSummonedTypeOne(_ -> 1)
        ..presetManaCost(_ -> 75)
        ..presetCastRange(_ -> 650)
        ..presetCooldown(_ -> 12)
        ..presetDurationNormal(_ -> 40)
        ..setNameEnhance("Z", "Raise Dead")
        ..tooltipStopListen(true)
    abilTooltipMap.put(ABIL_RAISE_SKELETON, tgen.generateFullTooltip())

    itm = createBasicItem(ITEM_RAISE_SKELETON_MAGE)
        ..setItemCost(0, 200, 1, 3, 3)
        ..setNameEnhance("Z", "Replace Skeleton Warrior by Skeletal Mage")
        ..setInterfaceIcon(Icons.bTNSkeletonMage)

    tgen = new BTAbilityTooltipGenerator("Raises skeleton mages from a corpse.")
    new AbilityDefinitionRaiseDeadCreep(ABIL_RAISE_SKELETON_MAGE)
        ..registerTooltipGenerator(tgen)
        ..presetUnitTypeOne(_ -> commaList(UNIT_SKELETON_MAGE))
        ..presetUnitTypeForLimitCheck(_ -> commaList(UNIT_SKELETON_MAGE))
        ..tooltipStartListen()
        ..presetUnitsSummonedTypeOne(_ -> 1)
        ..presetManaCost(_ -> 75)
        ..presetCastRange(_ -> 650)
        ..presetCooldown(_ -> 12)
        ..presetDurationNormal(_ -> 40)
        ..setNameEnhance("Z", "Raise Dead")
        ..tooltipStopListen(true)
    tgen.applyToDefItem(itm)
    abilTooltipMap.put(ABIL_RAISE_SKELETON_MAGE, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator("Raises revenants from a corpse.")
    new AbilityDefinitionRaiseDeadCreep(ABIL_RAISE_REVENANT)
        ..registerTooltipGenerator(tgen)
        ..presetUnitTypeOne(_ -> commaList(UNIT_REVENANT))
        ..presetUnitTypeForLimitCheck(_ -> commaList(UNIT_REVENANT))
        ..tooltipStartListen()
        ..presetUnitsSummonedTypeOne(_ -> 2)
        ..presetManaCost(_ -> 150)
        ..presetCastRange(_ -> 600)
        ..presetCooldown(_ -> 10)
        ..presetDurationNormal(_ -> 40)
        ..setNameEnhance("Z", "Raise Revenants")
        ..tooltipStopListen(true)
    abilTooltipMap.put(ABIL_RAISE_REVENANT, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator(
        "Reduces attack rate and movement speed of target units. Orb effect.")
    new AbilityDefinitionOrbofSpells(ABIL_CRIPPLE_ORB)
        ..registerTooltipGenerator(tgen)
        ..presetChanceToHitUnits(_ -> 100)
        ..presetChanceToHitSummons(_ -> 100)
        ..setEnabledAttackIndex(1, 0)
        ..presetDamageBonus(_ -> 0)
        ..presetEffectAbility(_ -> commaList(ABIL_CRIPPLE))

    itm = createBasicItem(ITEM_CRIPPLE)
        ..setItemCost(0, 100, 1, 3, 3)
        ..setNameEnhance("X", "Add 3 Cripple")
        ..setInterfaceIcon(Icons.bTNCripple)

    new AbilityDefinitionCripplecreep(ABIL_CRIPPLE)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..setAttackSpeedReduction(1, 0.3)
        ..addTooltipProperty("Attack Speed Reduction", _ -> 0.3.toPercent())
        ..setMovementSpeedReduction(1, 0.20)
        ..addTooltipProperty("Movement Speed Reduction", _ -> 0.20.toPercent())
        ..setDamageReduction(1, 0.40)
        ..addTooltipProperty("Damage Reduction", _ -> 0.40.toPercent())
        ..presetDurationNormal(_ -> 5)
        ..tooltipStopListen(true)
        ..setNameEnhance("Z", "Cripple")
        ..setCooldown(1, 0)
        ..setManaCost(1, 0)
        ..setBuffs(1, commaList(BuffIds.cripple))
    tgen.applyToDefItem(itm)
    abilTooltipMap.put(ABIL_CRIPPLE, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator(
        "A coil of death that deal damage to an enemy unit.")
    new AbilityDefinitionFireBoltcreep(ABIL_DEATH_COIL)
        ..presetDurationNormal(_ -> 0.01)
        ..setCheckDependencies(false)
        ..presetCooldown(_ -> 0)
        ..registerTooltipGenerator(tgen)
        ..presetDamage(_ -> 300)
        ..tooltipStartListen()
        ..presetCastRange(_ -> 800)
        ..presetManaCost(_ -> 75)
        ..setNameEnhance("Z", "Death Coil")
        ..tooltipStopListen(false)
        ..setMissileArt(Abilities.deathCoilMissile)

    createAutoCastedEnemyAbility(ABIL_AUTOCAST_DEATH_COIL)
        ..presetManaCost(_ -> 75)
        ..presetDurationNormal(_ -> 0)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetCooldown(_ -> 6)
        ..tooltipStopListen(true)
        ..presetCastRange(_ -> 800)
        ..setNameEnhance("Z", "Death Coil")
        ..setIconNormal(Icons.bTNDeathCoil)
        ..setIconTurnOff(Icons.bTNDeathCoil)

    abilTooltipMap.put(ABIL_DEATH_COIL, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator(
        "Gives all friendly nearby units a bonus to hit point regeneration.")
    new AbilityDefinitionAuraRegenerationStatue(ABIL_UNHOLY_AURA)
        ..presetDurationNormal(_ -> 0)
        ..setPercentage(1, true)
        ..setCheckDependencies(false)
        ..presetCooldown(_ -> 0)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..setAmountofHitPointsRegenerated(1, 0.02)
        ..addTooltipProperty("Amount of Hit Points Regenerated", _ -> 0.02.toPercent())
        ..presetAreaofEffect(_ -> 800)
        ..setNameEnhance("Z", "Unholy Aura")
        ..tooltipStopListen(true)
        ..setArtTarget(Abilities.unholyAura)

    abilTooltipMap.put(ABIL_UNHOLY_AURA, tgen.generateFullTooltip())

    tgen = new BTAbilityTooltipGenerator(
        "Reduce enemy armor on hit.")
    new AbilityDefinitionOrbofCorruption(ABIL_ORB_CORRUPTION)
        ..presetEnabledAttackIndex(_ -> 0)
        ..presetDamageBonusDice(_ -> 0)
        ..registerTooltipGenerator(tgen)
        ..tooltipStartListen()
        ..presetArmorPenalty(_ -> 10)
        ..presetDurationNormal(_ -> 5)
        ..setNameEnhance("Z", "Orb of Corruption")
        ..tooltipStopListen(true)
        ..setArtTarget("")

    abilTooltipMap.put(ABIL_ORB_CORRUPTION, tgen.generateFullTooltip())
