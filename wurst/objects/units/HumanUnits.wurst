package HumanUnits

// Standard libs imports:
import Assets
import ChannelAbilityPreset
import HashMap
import LinkedList

// Third party imports:
import Lodash

// Local imports:
import ArmySpawner
import LocalObjectIDs
import UnitObjEditingUtils
import UnitTooltipGenerator

class UnitCount
    int buildingId
    int unitId
    int count


@compiletime function createFootman()
    let spawnCount = armyMap.get(BUILDING_FOOTMAN).countBy(Predicate.owned<int>(id -> id == UNIT_FOOTMAN))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_FOOTMAN)
        ..setModelFile(Units.footman1)
        ..setIconGameInterface(Icons.bTNFootman)
        ..setUnitSoundSet(Soundsets.footman)
        ..setUnitsTrained(commaList(UNIT_FOOTMAN))
        ..setNameEnhance("Q", "Footman x" + spawnCount.toString())

    createSpawnedUnit(UNIT_FOOTMAN, UnitIds.footman)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setAttack1DamageBase(14)
        ..setPointValue(20)
        ..setHitPointsMaximumBase(100)
        ..setName("Footman")
        ..setIconGameInterface(Icons.bTNFootman)
        ..tooltipStopListen(true, buildingDef)
        ..setCollisionSize(15)
        ..setPriority(2)

@compiletime function createRifleman()
    let spawnCount = armyMap.get(BUILDING_RIFLEMAN).countBy(Predicate.owned<int>(id -> id == UNIT_RIFLEMAN))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_RIFLEMAN)
        ..setModelFile(Units.rifleman1)
        ..setIconGameInterface(Icons.bTNRifleman)
        ..setUnitSoundSet(Soundsets.rifleman)
        ..setUnitsTrained(commaList(UNIT_RIFLEMAN))
        ..setNameEnhance("W", "Rifleman x" + spawnCount.toString())

    createSpawnedUnit(UNIT_RIFLEMAN, UnitIds.rifleman)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(30)
        ..tooltipStartListen()
        ..setAttack1DamageBase(14)
        ..setAttack1AttackType(AttackType.Pierce)
        ..setAttack1Range(550)
        ..setDefenseBase(0)
        ..setArmorType(ArmorType.Medium)
        ..setAttack1CooldownTime(1.350)
        ..setSpeedBase(270)
        ..setHitPointsMaximumBase(100)
        ..tooltipStopListen(true, buildingDef)

        ..setCollisionSize(15)
        ..setLevel(2)
        ..setPriority(3)

        ..setIconGameInterface(Icons.bTNRifleman)
        ..setName("Rifleman")

@compiletime function createPriest()
    let spawnCount = armyMap.get(BUILDING_PRIEST).countBy(Predicate.owned<int>(id -> id == UNIT_PRIEST))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_PRIEST)
        ..setModelFile(Units.priest1)
        ..setIconGameInterface(Icons.bTNPriest)
        ..setUnitSoundSet(Soundsets.priest)
        ..setUnitsTrained(commaList(UNIT_PRIEST))
        ..setNameEnhance("A", "Priest x" + spawnCount.toString())

    createSpawnedUnit(UNIT_PRIEST, UnitIds.priest)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(40)
        ..setAttack1DamageBase(10)
        ..setAttack1AttackType(AttackType.Magic)
        ..setAttack1Range(600)
        ..setDefenseBase(0)
        ..setArmorType(ArmorType.Unarmored)
        ..setAttack1CooldownTime(1.75)
        ..setSpeedBase(270)
        ..setHitPointsMaximumBase(100)
        ..setMana(200)
        ..tooltipStopListen(true, buildingDef)

        ..setCollisionSize(15)
        ..setPriority(9)

        ..setIconGameInterface(Icons.bTNPriest)
        ..setName("Priest")

@compiletime function createKnight()
    let spawnCount = armyMap.get(BUILDING_KNIGHT).countBy(Predicate.owned<int>(id -> id == UNIT_KNIGHT))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_KNIGHT)
        ..setModelFile(Units.knight1)
        ..setIconGameInterface(Icons.bTNKnight)
        ..setUnitSoundSet(Soundsets.knight)
        ..setUnitsTrained(commaList(UNIT_KNIGHT))
        ..setNameEnhance("E", "Knight x" + spawnCount.toString())

    createSpawnedUnit(UNIT_KNIGHT, UnitIds.knight)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(30)
        ..setAttack1DamageBase(49)
        ..setAttack1AttackType(AttackType.Normal)
        ..setDefenseBase(4)
        ..setArmorType(ArmorType.Large)
        ..setAttack1CooldownTime(1.4)
        ..setSpeedBase(350)
        ..setHitPointsMaximumBase(100)
        ..tooltipStopListen(true, buildingDef)

        ..setAttack1Range(120)
        ..setCollisionSize(15)
        ..setLevel(6)
        ..setPriority(5)

        ..setIconGameInterface(Icons.bTNKnight)
        ..setName("Knight")

@compiletime function createSorceress()
    let spawnCount = armyMap.get(BUILDING_SORCERESS).countBy(Predicate.owned<int>(id -> id == UNIT_SORCERESS))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_SORCERESS)
        ..setModelFile(Units.sorceress1)
        ..setIconGameInterface(Icons.bTNSorceress)
        ..setUnitSoundSet(Soundsets.sorceress)
        ..setUnitsTrained(commaList(UNIT_SORCERESS))
        ..setNameEnhance("S", "Sorceress x" + spawnCount.toString())

    createSpawnedUnit(UNIT_SORCERESS, UnitIds.sorceress)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(50)
        ..setAttack1DamageBase(34)
        ..setAttack1AttackType(AttackType.Magic)
        ..setAttack1Range(550)
        ..setDefenseBase(0)
        ..setArmorType(ArmorType.Unarmored)
        ..setAttack1CooldownTime(1.75)
        ..setSpeedBase(270)
        ..setHitPointsMaximumBase(25)
        ..setMana(200)
        ..tooltipStopListen(true, buildingDef)

        ..setCollisionSize(15)
        ..setPriority(10)

        ..setIconGameInterface(Icons.bTNSorceress)
        ..setName("Sorceress")

@compiletime function createArchmage()
    let spawnCount = armyMap.get(BUILDING_ARCHMAGE).countBy(Predicate.owned<int>(id -> id == UNIT_ARCHMAGE))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_ARCHMAGE)
        ..setModelFile(Units.heroArchMage)
        ..setIconGameInterface(Icons.bTNHeroArchMage)
        ..setUnitSoundSet(Soundsets.heroArchMage)
        ..setUnitsTrained(commaList(UNIT_ARCHMAGE))
        ..setNameEnhance("D", "Archmage x" + spawnCount.toString())

    createSpawnedUnit(UNIT_ARCHMAGE, UnitIds.sorceress)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(200)
        ..setNormalAbilities("")
        ..setAttack1DamageBase(99)
        ..setAttack1AttackType(AttackType.Magic)
        ..setAttack1Range(600)
        ..setDefenseBase(0)
        ..setArmorType(ArmorType.Unarmored)
        ..setAttack1CooldownTime(1.75)
        ..setSpeedBase(350)
        ..setHitPointsMaximumBase(150)
        ..setMana(400)
        ..tooltipStopListen(true, buildingDef)

        ..setCollisionSize(15)
        ..setPriority(10)

        ..setIconGameInterface(Icons.bTNHeroArchMage)
        ..setModelFile(Units.heroArchMage)
        ..setUnitSoundSet(Soundsets.heroArchMage)
        ..setName("Archmage")
        ..setAttack1ProjectileArt(Abilities.fireBallMissile)

@compiletime function createPaladin()
    let spawnCount = armyMap.get(BUILDING_PALADIN).countBy(Predicate.owned<int>(id -> id == UNIT_PALADIN))
    let tooltip = new UnitTooltipGenerator("Footman Desc")
    let buildingDef = createBuildingUnit(BUILDING_PALADIN)
        ..setModelFile(Units.heroPaladin)
        ..setIconGameInterface(Icons.bTNHeroPaladin)
        ..setUnitSoundSet(Soundsets.heroPaladin)
        ..setUnitsTrained(commaList(UNIT_PALADIN))
        ..setNameEnhance("R", "Paladin x" + spawnCount.toString())

    createSpawnedUnit(UNIT_PALADIN, UnitIds.paladin)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setPointValue(200)
        ..setIconGameInterface(Icons.bTNHeroPaladin)
        ..setAttack1DamageBase(119)
        ..setCollisionSize(15)
        ..setHitPointsMaximumBase(400)
        ..setModelFile(Units.heroPaladin)
        ..setUnitSoundSet(Soundsets.heroPaladin)
        ..setPriority(2)
        ..tooltipStopListen(true, buildingDef)
        ..setName("Paladin")

@compiletime function createBuilder()
    createBuilder(UNIT_HUMAN_BUILDER, UnitIds.peasant)
        ..setNameEnhance("Q", "Human Builder")
        ..setStructuresBuilt(commaList(
            BUILDING_FOOTMAN,
            BUILDING_PALADIN,
            BUILDING_RIFLEMAN,
            BUILDING_PRIEST,
            BUILDING_KNIGHT,
            BUILDING_SORCERESS,
            BUILDING_ARCHMAGE
        ))
