package HumanUnitsDef

// Standard libs imports:
import Assets

// Local imports:
import BTAbilities
import BTAbilityTooltipGenerator
import ColorUtils
import ItemObjEditingCommon
import LocalAssets
import LocalObjectIDs
import UnitObjEditingCommon
import UnitTooltipGenerator
import LinkedList

@compiletime function createFootman()
    var tooltip = new UnitTooltipGenerator("Basic melee unit")
    createSpawnedUnit(UNIT_FOOTMAN, UnitIds.footman, BUILDING_FOOTMAN)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 14, 1, 6, 1.4)

        ..setArmorData(ArmorType.Large, 3)
        ..setHitPointsMaximumBase(400)

        ..setSpeedBase(270)
        ..setAutoPointValue()
        ..setAutoBuildingCost()
        ..tooltipStopListen(true)

        ..setNameEnhance("Q", "Footman")
        ..setSizeSmall()

        ..setModelFileExt(Units.footman1)
        ..setIconGameInterfaceExt(Icons.bTNFootman)
        ..setUnitSoundSetExt(Soundsets.footman)

    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_MELEE_AURA_FLAT_10)
    )
    let itm = createBasicItem(ITEM_CAPTAIN)
    createSpawnedUnit(UNIT_CAPTAIN, UnitIds.thecaptain)
        ..setNormalAbilities(commaList(ABIL_MELEE_AURA_FLAT_10))
        ..registerItemDef(itm, ItemModifierType.Addition)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 44, 1, 16, 1.3)

        ..setArmorData(ArmorType.Large, 7)
        ..setHitPointsMaximumBase(1500)

        ..setSpeedBase(270)
        ..setAutoPointValue()
        ..tooltipStopListen(true, itm)

        ..setItemCostUnit(0, 500, 1)
        ..setNameEnhance("Z", "Captain")
        ..setSizeSmall()

        ..setIconGameInterfaceExt(Icons.bTNTheCaptain)

@compiletime function createRifleman()
    var tooltip = new UnitTooltipGenerator("Basic ranged unit.")

    createSpawnedUnit(UNIT_RIFLEMAN, UnitIds.rifleman, BUILDING_RIFLEMAN)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setAttack1Data(AttackType.Pierce, 20, 5, 3, 1.7)
        ..setAttack1Range(450)

        ..setArmorData(ArmorType.Medium, 2)
        ..setHitPointsMaximumBase(290)

        ..setSpeedBase(270)
        ..setAutoPointValue()
        ..setAutoBuildingCost()

        ..tooltipStopListen(true)

        ..setSizeSmall()
        ..setNameEnhance("W", "Rifleman")
        ..setUpgradeTo(asList(BUILDING_GRENADIER, BUILDING_SNIPER))


        ..setModelFileExt(Units.rifleman1)
        ..setIconGameInterfaceExt(Icons.bTNRifleman)
        ..setUnitSoundSetExt(Soundsets.rifleman)

    tooltip = new UnitTooltipGenerator(
        "Decent ranged pierce unit, has small splash."
    )
    // var itm = createBasicItem(ITEM_GRENADIER)
    createSpawnedUnit(UNIT_GRENADIER, UnitIds.rifleman, BUILDING_GRENADIER)
        ..setAttack1WeaponType(WeaponType.MissileSplash)
        ..setAttack1ProjectileArt(Abilities.cannonTowerMissile)
        ..setAttack1ProjectileSpeed(1600)
        ..setNormalAbilities(commaList(ABIL_GRENADIER_VISUAL))
        ..setBuildingAbilities(commaList(
            AbilityIds.invulnerable,
            AbilityIds.inventory,
            ABIL_SHOP_SHARING,
            ABIL_GRENADIER_VISUAL,
            AbilityIds.sellItems,
            ABIL_MOVE_BUILDING
        ))
        // ..registerItemDef(itm, ItemModifierType.Replace)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setAttack1Data(AttackType.Pierce, 40, 5, 3, 1.7)
        ..setAttack1Range(450)
        ..setSmallSplash()

        ..setArmorData(ArmorType.Medium, 2)
        ..setHitPointsMaximumBase(290)

        ..setSpeedBase(270)
        // ..setItemCostReplacement(0, 100, 1, riflemanCount, riflemanCount, BUILDING_RIFLEMAN)

        ..setSizeSmall()
        ..setAutoPointValue()
        ..setAutoBuildingCost()


        ..setNameEnhance("X", "Grenadier")
        ..tooltipStopListen(true)
        // ..tooltipStopListen(true, itm)

        ..setUnitSoundSetExt(Soundsets.rifleman)
        ..setIconGameInterfaceExt(Icons.bTNHumanMissileUpThree)
        ..setModelFileExt(Units.rifleman1)
        ..setButtonPositionX(1)

    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_CRITICAL_STRIKE_40) + "\n\n" +
        "High range unit."
    )
    // itm = createBasicItem(ITEM_SNIPER)
    createSpawnedUnit(UNIT_SNIPER, UnitIds.rifleman, BUILDING_SNIPER)
        ..setNormalAbilities(commaList(ABIL_CRITICAL_STRIKE_40))
        // ..registerItemDef(itm, ItemModifierType.Replace)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setAttack1Data(AttackType.Pierce, 30, 5, 4, 1.7)
        ..setAttack1Range(900)

        ..setArmorData(ArmorType.Medium, 2)
        ..setHitPointsMaximumBase(290)

        ..setSpeedBase(270)
        // ..setItemCostReplacement(0, 100, 1, riflemanCount, riflemanCount, BUILDING_RIFLEMAN)

        ..setSizeSmall()
        ..setAutoPointValue()
        ..setAutoBuildingCost()

        ..setNameEnhance("C", "Sniper")
        ..tooltipStopListen(true)
        // ..tooltipStopListen(true, itm)

        ..setModelFileExt(Units.rifleman1)
        ..setIconGameInterfaceExt(Icons.bTNHumanMissileUpOne)
        ..setUnitSoundSetExt(Soundsets.rifleman)
        ..setButtonPositionX(2)

    tooltip = new UnitTooltipGenerator("Long range unit with small splash.")

    var itm = createBasicItem(ITEM_MORTAR)
    createSpawnedUnit(UNIT_MORTAR, UnitIds.mortarteam)
        ..registerItemDef(itm, ItemModifierType.Addition)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Siege, 95, 5, 10, 2.5)
        ..setSmallSplash()
        ..setAttack1Range(1000)
        ..setAttack1ProjectileSpeed(1000)

        ..setArmorData(ArmorType.Unarmored, 0)
        ..setHitPointsMaximumBase(300)

        ..setSpeedBase(270)
        ..setAutoPointValue()

        ..setItemCostUnit(0, 500, 1)
        ..setNameEnhance("Z", "Mortar Squad")
        ..tooltipStopListen(true, itm)

        ..setSizeSmall()

        ..setIconGameInterfaceExt(Icons.bTNMortarTeam)

@compiletime function createPriest()
    var tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_HEAL) + "\n\n" +
        abilTooltipMap.get(ABIL_ABOLISH_MAGIC_ORB)
    )

    createSpawnedUnit(UNIT_PRIEST, UnitIds.priest, BUILDING_PRIEST)
        ..setNormalAbilities(commaList(ABIL_HEAL, ABIL_ABOLISH_MAGIC_ORB))
        ..setDefaultActiveAbility(commaList(ABIL_HEAL))
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Magic, 15, 5, 2, 1.75)
        ..setAttack1Range(650)
        ..setAttack1ProjectileSpeed(STANDARD_PROJECTILE_SPEED)

        ..setArmorData(ArmorType.Unarmored, 2)
        ..setHitPointsMaximumBase(220)
        ..setMana(200)

        ..setSpeedBase(270)
        ..setSizeSmall()
        ..setAutoPointValue()
        ..setAutoBuildingCost()
        ..setNameEnhance("A", "Priest")
        ..setUpgradeTo(asList(BUILDING_SPELL_BREAKER))

        ..tooltipStopListen(true)

        ..setModelFileExt(Units.priest1)
        ..setIconGameInterfaceExt(Icons.bTNPriest)
        ..setUnitSoundSetExt(Soundsets.priest)

    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_SPELL_STEAL) + "\n\n" +
        "Note: Priest items will be refunded as this unit only cast spell steal.".color(GENERAL_COLOR)
        )
    createSpawnedUnit(UNIT_SPELL_BREAKER, UnitIds.spellbreaker, BUILDING_SPELL_BREAKER)
        ..setNormalAbilities(commaList(ABIL_SPELL_STEAL))
        ..setDefaultActiveAbility(commaList(ABIL_SPELL_STEAL))
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 30, 5, 4, 1.4)
        ..setAttack1Range(300)
        ..setAttack1ProjectileSpeed(STANDARD_PROJECTILE_SPEED)

        ..setArmorData(ArmorType.Medium, 4)
        ..setHitPointsMaximumBase(750)
        ..setMana(200)

        ..setSpeedBase(270)

        ..setAutoPointValue()
        ..setAutoBuildingCost()
        ..tooltipStopListen(true)

        ..setSizeSmall()
        ..setNameEnhance("Z", "Spell Breaker")
        ..setBuildingScalingValue(0.85)

        ..setModelFileExt(Units.bloodElfSpellThief)
        ..setIconGameInterfaceExt(Icons.bTNSpellBreaker)
        ..setUnitSoundSetExt(Soundsets.bloodElfSpellThief)
        ..setButtonPositionX(1)


@compiletime function createKnight()
    var tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_BASH_20)
    )

    createSpawnedUnit(UNIT_KNIGHT, UnitIds.knight, BUILDING_KNIGHT)
        ..setNormalAbilities(commaList(ABIL_BASH_20))
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 35, 5, 4, 1.4)

        ..setArmorData(ArmorType.Large, 5)
        ..setHitPointsMaximumBase(1000)

        ..setSpeedBase(350)

        ..setSizeSmall()
        ..setAutoPointValue()
        ..setAutoBuildingCost()

        ..setNameEnhance("E", "Knight")
        ..tooltipStopListen(true)
        ..setUpgradeTo(asList(BUILDING_CRUSADER))

        ..setModelFileExt(Units.knight1)
        ..setIconGameInterfaceExt(Icons.bTNKnight)
        ..setUnitSoundSetExt(Soundsets.knight)

    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_BASH_30) + "\n\n" +
        abilTooltipMap.get(ABIL_MAGIC_ARMOR_30) + "\n\n" +
        abilTooltipMap.get(ABIL_HOLY_BLADE) + "\n"
    )
    // var itm = createBasicItem(ITEM_CRUSADER)
    createSpawnedUnit(UNIT_CRUSADER, UnitIds.knight, BUILDING_CRUSADER)
        ..setNormalAbilities(commaList(
            ABIL_MAGIC_ARMOR_50,
            ABIL_HOLY_BLADE,
            ABIL_BASH_30,
            ABIL_HOLY_BLADE_VISUAL
            ))
        ..setDefaultActiveAbility(commaList(ABIL_HOLY_BLADE))
        // ..registerItemDef(itm, ItemModifierType.Replace)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 80, 5, 5, 1.4)

        ..setArmorData(ArmorType.Large, 6)
        ..setHitPointsMaximumBase(1300)

        ..setSpeedBase(350)

        ..setSizeSmall()
        ..setAutoPointValue()
        ..setAutoBuildingCost()

        // ..setItemCostReplacement(0, 200, 1, 5, 5, BUILDING_KNIGHT)
        ..tooltipStopListen(true)

        ..setAttack1Range(120)
        ..setScalingValue(1.05)
        ..setNameEnhance("Z", "Crusader")

        ..setModelFileExt(Units.banditLord1)
        ..setIconGameInterfaceExt(Icons.bTNBanditLord)
        ..setUnitSoundSetExt(Soundsets.knight)
        ..setButtonPositionX(1)


    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_CLEAVE_30) + "\n\n" +
        abilTooltipMap.get(ABIL_MAGIC_ARMOR_50)
    )

    let itm = createBasicItem(ITEM_MARSHALL)
    createSpawnedUnit(UNIT_MARSHALL, UnitIds.lordgarithos)
        ..setNormalAbilities(commaList(ABIL_CLEAVE_30, ABIL_MAGIC_ARMOR_50))
        ..setDefaultActiveAbility(commaList(""))
        ..registerItemDef(itm, ItemModifierType.Addition)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Normal, 110, 10, 6, 1.5)

        ..setArmorData(ArmorType.Large, 10)
        ..setHitPointsMaximumBase(2600)

        ..setSpeedBase(330)
        ..setSizeLarge()
        ..setItemCostUnit(0, 1000, 1)
        ..tooltipStopListen(true, itm)

        ..setNameEnhance("X", "Marshall")
        ..setScalingValue(1.2)
        ..setMana(0)

        ..setIconGameInterfaceExt(Icons.bTNGarithos)


function createPaladin(int paladinId) returns BTUnitDefinition
    let tooltip = new UnitTooltipGenerator(
        // abilTooltipMap.get(ABIL_CLEAVE_30) + "\n\n" +
        abilTooltipMap.get(ABIL_BASH_30) + "\n\n" +
        abilTooltipMap.get(ABIL_DEVOTION_AURA_2) + "\n\n" +
        "Eternal Vanguard\n".color(SPECIAL_COLOR) +
        "Upon dying, the paladin becomes a ghost."
    )
    return createSpawnedUnit(paladinId, UnitIds.paladin)
            ..registerTooltipGenerator(tooltip)
            // ..setNormalAbilities(commaList(ABIL_CLEAVE_30, ABIL_DEVOTION_AURA_2))
            ..setNormalAbilities(commaList(ABIL_BASH_30, ABIL_DEVOTION_AURA_2))
            ..tooltipStartListen()

            ..setAttack1Data(AttackType.Siege, 110, 5, 10, 1.3)

            ..setArmorData(ArmorType.Large, 6)
            ..setHitPointsMaximumBase(2000)

            ..setSpeedBase(270)

            ..setSizeSmall()
            ..setLumberCost(1000)
            ..setPointValue(0, 1000, 1)
            ..addTooltipProperty("Army points", "100")
            ..tooltipStopListen(true)

            ..setAttack1Range(120)
            ..setIconGameInterface(Icons.bTNHeroPaladin)
            ..setNameEnhance("Q", "Paladin")


@compiletime function createPaladinSquad()
    let tooltip = new UnitTooltipGenerator(
        // abilTooltipMap.get(ABIL_CLEAVE_30) + "\n\n" +
        "Spawn upon paladin death.")
    createSpawnedUnit(UNIT_GHOST_PALADIN, UnitIds.paladin)
        ..registerTooltipGenerator(tooltip)
        ..setNormalAbilities(commaList(""))
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Magic, 110, 5, 10, 1.3)

        ..setArmorData(ArmorType.Divine, 4)
        ..setHitPointsMaximumBase(900)
        ..setHitPointsRegenerationRate(-15)
        ..setSummonedUnit()

        ..setSpeedBase(270)
        ..setPointValue(60)
        ..tooltipStopListen(true)

        ..setArtSpecial(Objects.humanLargeDeathExplode)
        ..setAttack1Range(120)
        ..setSizeSmall()
        ..setPriority(5)
        ..setIconGameInterface(Icons.bTNResurrection)
        ..setModelFile(LocalUnits.paladinGhost)
        ..setNameEnhance("W", "Paladin Ghost")

    let unitDef = createPaladin(UNIT_PALADIN_1)
        ..setModelFile(Units.heroPaladin)
    createPaladin(UNIT_PALADIN_2)
        ..setModelFile(Units.heroPaladinBoss)
    createPaladin(UNIT_PALADIN_3)
        ..setModelFile(Units.heroPaladinBoss2)

    createBasicItem(ITEM_PALADIN_SKIN_BLACK)
        ..setName("Black Hair Color")
        ..setTooltipBasic("Black Hair Color")
        ..setTooltipExtended("Change paladin model to a black haired one.")
        ..setInterfaceIcon(Icons.bTNHeroPaladin)
        ..setItemCost(0, 0, 1, 1, 1)

    createBasicItem(ITEM_PALADIN_SKIN_WHITE)
        ..setName("White Hair Color")
        ..setTooltipBasic("White Hair Color")
        ..setTooltipExtended("Change paladin model to a white haired one.")
        ..setInterfaceIcon(Icons.bTNHeroPaladin)
        ..setItemCost(0, 0, 1, 1, 1)

    // TODO: lumber cost shoud match armyspawner automatically
    let buildingDef = createBuildingUnit(BUILDING_PALADIN)
        ..setNameEnhance("R", "Paladin x1")
        ..setUnitsSold(commaList(UNIT_PALADIN_1, UNIT_GHOST_PALADIN))
        ..setHitPointsMaximumBase(100)
        ..setLumberCost(1000)
        ..setManaMaximum(1000)
        ..setManaInitialAmount(1000)
        ..setModelFile(Units.heroPaladin)
        ..setIconGameInterface(Icons.bTNHeroPaladin)
        ..setUnitSoundSet(Soundsets.uther)
    unitDef.tooltipGen.applyToDef(buildingDef)


@compiletime function createSorceress()
    var tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_SLOW)
    )

    createSpawnedUnit(UNIT_SORCERESS, UnitIds.sorceress, BUILDING_SORCERESS)
        ..setNormalAbilities(commaList(ABIL_SLOW))
        ..setDefaultActiveAbility(commaList(ABIL_SLOW))
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Magic, 35, 5, 3, 1.9)
        ..setAttack1Range(550)
        ..setAttack1ProjectileSpeed(STANDARD_PROJECTILE_SPEED)

        ..setArmorData(ArmorType.Unarmored, 0)
        ..setHitPointsMaximumBase(160)
        ..setMana(300)

        ..setSpeedBase(270)

        ..setAutoPointValue()
        ..setAutoBuildingCost()

        ..tooltipStopListen(true)
        ..setBuildingUnitsSold(commaList(UNIT_SORCERESS, UNIT_GHOST))

        ..setSizeSmall()
        ..setNameEnhance("S", "Sorceress")

        ..setModelFileExt(Units.sorceress1)
        ..setIconGameInterfaceExt(Icons.bTNSorceress)
        ..setUnitSoundSetExt(Soundsets.sorceress)


    tooltip = new UnitTooltipGenerator(
        abilTooltipMap.get(ABIL_BLIZZARD) + "\n\n" +
        abilTooltipMap.get(ABIL_BRILLANCE_AURA_2) + "\n\n" +
        abilTooltipMap.get(ABIL_MANA_SHIELD)
    )
    let itm = createBasicItem(ITEM_COURT_ENCHANTRESS)
    createSpawnedUnit(UNIT_COURT_ENCHANTRESS, UnitIds.jaina)
        ..registerItemDef(itm, ItemModifierType.Addition)
        ..setNormalAbilities(commaList(
            ABIL_AUTOCAST_BLIZZARD,
            ABIL_BLIZZARD,
            ABIL_BRILLANCE_AURA_2,
            ABIL_MANA_SHIELD
            ))
        ..setDefaultActiveAbility(commaList(ABIL_MANA_SHIELD))
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()

        ..setAttack1Data(AttackType.Magic, 70, 10, 3, 1.75)
        ..setAttack1Range(650)
        ..setAttack1ProjectileSpeed(STANDARD_PROJECTILE_SPEED)
        ..setSmallSplash()

        ..setArmorData(ArmorType.Unarmored, 0)
        ..setHitPointsMaximumBase(240)
        ..setMana(800)

        ..setSpeedBase(270)

        ..setSizeSmall()
        ..setItemCostUnit(0, 1500, 1)

        ..setNameEnhance("A", "Court Enchantress")
        ..tooltipStopListen(true, itm)
        ..setAttack1WeaponType(WeaponType.MissileSplash)
        ..setAttack1ProjectileArt(Abilities.annihilationMissile)

        ..setArtSpecial(Objects.humanLargeDeathExplode)
        ..setIconGameInterfaceExt(Icons.bTNJaina)

@compiletime function createMage()
    var tooltip = new UnitTooltipGenerator("Spawn upon unit death.")
    createSpawnedUnit(UNIT_GHOST, UnitIds.lesservoidwalker)
        ..registerTooltipGenerator(tooltip)
        ..tooltipStartListen()
        ..setNormalAbilities("")

        ..setAttack1Data(AttackType.Magic, 12, 3, 5, 1.6)
        ..setAttack1Range(300)
        ..setAttack1ProjectileSpeed(STANDARD_PROJECTILE_SPEED)

        ..setArmorData(ArmorType.Divine, 2)
        ..setHitPointsMaximumBase(160)
        ..setHitPointsRegenerationRate(-5)
        ..setSummonedUnit()

        ..setManaMaximum(0)
        ..setSpeedBase(270)
        ..setPointValue(5)
        ..tooltipStopListen(true)
        ..setNameEnhance("W", "Ghost")
        ..setGhostDeath()


@compiletime function createBuilder()
    createBuilder(UNIT_HUMAN_BUILDER, UnitIds.peasant)
        ..setNameEnhance("Q", "Human Builder")
        ..setStructuresBuilt(commaList(
            BUILDING_FOOTMAN,
            BUILDING_KNIGHT,
            BUILDING_PALADIN,
            BUILDING_PRIEST,
            BUILDING_SORCERESS,
            BUILDING_RIFLEMAN
        ))
