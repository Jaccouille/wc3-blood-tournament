package PlayerData

// Standard libs imports:
import HashMap

// Local imports:
import GameConfig
import GameStates
import Players
import ColorUtils

public constant pDatas = new IterableMap<player, PlayerData>

public class PlayerData
    // let army = new LinkedList<LinkedList<int>>
    let buildingList = new LinkedList<unit>
    let spawnedUnits = new LinkedList<unit>
    rect buildingRect = null
    player _p
    int roundBloodPoints = 0
    int totalBloodPoints = 0
    int armyPoints = 0
    unit racePicker
    unit builder
    LinkedList<player> dummyPlayers = new LinkedList<player>

    construct(player p, rect buildingRect)
        this._p = p
        this.buildingRect = buildingRect
        pDatas.put(p, this)
        // TODO: replace 8 by human player size
        initDummyPlayer(_p.getId() + 8)
        initDummyPlayer(_p.getId() + 16)

    function initDummyPlayer(int playerId)
        let dummyPlayer = players[playerId]

        SetPlayerAllianceStateBJ(_p, dummyPlayer, bj_ALLIANCE_ALLIED_VISION)
        dummyPlayers.forEach() (player t) ->
            SetPlayerAllianceStateBJ(t, dummyPlayer, bj_ALLIANCE_ALLIED_VISION)
            SetPlayerAllianceStateBJ(dummyPlayer, t, bj_ALLIANCE_ALLIED_VISION)

        dummyPlayer.setColor(_p.getColor())
        dummyPlayers.push(dummyPlayer)
        // dummyPlayer.setName(_p.getName() + " " + dummyPlayers.size().toString())
        dummyPlayer.setName(_p.getName())

    function renameDummyPlayer()
        for dummyPlayer in dummyPlayers
            dummyPlayer.setName(_p.getName() + " " + dummyPlayers.indexOf(dummyPlayer).toString())

    function getDummyPlayer(int idx) returns player
        // return this._p
        return dummyPlayers.get(idx)

    function addBounty(int value)
        roundBloodPoints += value
        _p.addLumber(value)

    function addArmyPoints(int value)
        armyPoints += (value * gameConfig.getArmyPointsMultiplier()).toInt()

    function subArmyPoints(int value)
        armyPoints = max(armyPoints - (value * gameConfig.getArmyPointsMultiplier()).toInt(), 0)

    function giveBloodPointsReward()
        let msg = "You acquired " +
            armyPoints.toString().color(COLOR_RED) +
            " + " +
            roundBloodPoints.toString().color(COLOR_RED) +
            " blood points"
        printTimedToPlayer(msg, 15, _p)
        _p.addLumber(armyPoints)
        totalBloodPoints += armyPoints + roundBloodPoints


public function initPlayers()
    // TODO: refactor for release
    new PlayerData(players[0], gg_rct_Red)
    new PlayerData(players[1], gg_rct_Blue)
    new PlayerData(players[2], gg_rct_Teal)
    new PlayerData(players[3], gg_rct_Purple)
    new PlayerData(players[4], gg_rct_Yellow)
    new PlayerData(players[5], gg_rct_Orange)
    new PlayerData(players[6], gg_rct_Green)
    new PlayerData(players[7], gg_rct_Pink)

    GameStates.gameplay.onEnter() state ->
        pDatas.forEach() (player _p, PlayerData _) ->
            _p.addGold(gameConfig.getStartingGold())
            _p.addLumber(gameConfig.getStartingLumber())
