package PlayerData

// Standard libs imports:
import HashMap
import LinkedList

// Local imports:
import GameStates
import GameConfig

public constant pDatas = new IterableMap<player, PlayerData>


public class PlayerData
    // let army = new LinkedList<LinkedList<int>>
    let buildingList = new LinkedList<unit>
    let spawnedUnits = new LinkedList<unit>
    rect buildingRect = null
    player _p
    int roundBountySum = 0
    int armyPoints = 0
    unit racePicker
    unit builder

    construct(player p, rect buildingRect)
        this._p = p
        this.buildingRect = buildingRect
        pDatas.put(p, this)

    function addBounty(int value)
        roundBountySum += value
        _p.addLumber(value)

    function addArmyPoints(int value)
        armyPoints += value

    function giveReward()
        let msg = "You acquired " +
            armyPoints.toString() +
            " + " +
            roundBountySum.toString() +
            " points"
        printTimedToPlayer(msg, 15, _p)
        _p.addLumber(armyPoints)
        roundBountySum = 0


public function initPlayers()
    new PlayerData(players[0], gg_rct_Red)
    new PlayerData(players[1], gg_rct_Blue)
    new PlayerData(players[2], gg_rct_Teal)
    new PlayerData(players[3], gg_rct_Purple)
    new PlayerData(players[4], gg_rct_Yellow)
    new PlayerData(players[5], gg_rct_Orange)
    new PlayerData(players[6], gg_rct_Green)
    new PlayerData(players[7], gg_rct_Pink)
    

    GameStates.gameplay.onEnter() state ->
        pDatas.forEach() (player _p, PlayerData _) ->
            _p.addGold(gameConfig.getStartingGold())
