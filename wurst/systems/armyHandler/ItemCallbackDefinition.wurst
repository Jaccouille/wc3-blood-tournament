package ItemCallbackDefinition

import HashMap
import LinkedList
import LocalObjectIDs

public let itemAddUnitMap = new HashMap<int, ItemAddUnit>
public let itemModifyUnitMap = new HashMap<int, ItemModifyUnit>

interface AddUnitCallbackListener
    function execute(LinkedList<int> unitTospawn, int count)

interface ActionCallbackListener
    function execute(unit u)

public class ItemAddUnit
    private AddUnitCallbackListener listener

    function addAction(AddUnitCallbackListener listener)
        this.listener = listener

    function execute(LinkedList<int> unitTospawn, int count)
        this.listener.execute(unitTospawn, count)

public class ItemModifyUnit
    private ActionCallbackListener listener

    function addAction(ActionCallbackListener listener)
        this.listener = listener

    function execute(unit u)
        this.listener.execute(u)


init
    let captainAction = new ItemAddUnit()
        ..addAction() (LinkedList<int> unitTospawn, int count) ->
        for i = 0 to count
            unitTospawn.push(UNIT_ROYAL_GUARD)

    itemAddUnitMap.put(ITEM_CAPTAIN, captainAction)

    let crusaderAction = new ItemAddUnit()
        ..addAction() (LinkedList<int> unitTospawn, int count) ->
        for i = 1 to count
            unitTospawn.replace(unitTospawn.getRandomElement(), UNIT_CRUSADER)

    let crusaderUnitAction = new ItemModifyUnit()
        ..addAction() (unit u) ->
        u.setScale(2.0)

    itemAddUnitMap.put(ITEM_CRUSADER, crusaderAction)
    itemModifyUnitMap.put(ITEM_CRUSADER, crusaderUnitAction)
